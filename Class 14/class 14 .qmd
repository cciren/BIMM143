---
title: "Class 14: RNASeq Mini Project"
author: "Irene Hsieh (A16197563)"
format: pdf
---

Run a complete RNASeq analysis workflow from counts to enriched genesets...

## Data import

```{r}
library(DESeq2)
```
```{r}
# Import metadata and take a peak
metadata <-  read.csv("GSE37704_metadata.csv")
counts <-  read.csv("GSE37704_featurecounts.csv", row.names =1)
```


## Data Exploration
```{r}
head(counts, 3)
```

```{r}
head(metadata)
```

```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

# Import metadata and take a peak
colData = read.csv(metaFile, row.names=1)
head(colData)
```
```{r}
metadata$id
```
> Q. Complete the code below to remove the troublesome first column from countData

```{r}
countdata <- counts [, -1]
head(countdata)
```
```{r}
all(colnames(countdata)== metadata$id)
```
```{r}
head(countdata,3)
```

> Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

```{r}
to.keep.inds <- rowSums(countdata)>0
nonzerocounts <- countdata[to.keep.inds,]
```

```{r}
library(DESeq2)
```

```{r}
dds = DESeqDataSetFromMatrix(countData = nonzerocounts,
                             colData = metadata,
                             design= ~condition)
dds = DESeq(dds)
```

```{r}
res <- results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
head(res)
```

> Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
summary(res)
```

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```
> Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01 ) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, 
      xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```
```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

```

> Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

> Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```

```{r}
library(pathview)
```
```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```
```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```
```{r}
attributes(keggres)
```
```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```
```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

##A different PDF based output of the same data

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```
```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```
> Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-regulated pathways?

```{r}
keggrespathways <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```
```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```


## Gene Oncology
```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

##Reactome Analysis
```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
head(sig_genes)
```

We wull write it in the text file: 

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, 
            col.names=FALSE, quote=FALSE)
```

An example fig from reactome online

![](R-HSA-68962.png)

> Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

RHO GTPase cycle has the most significant "Entities p-values". 
The pathways listed match my previousKEGG results. 
The differences are that from the reactome website, 
you can see the data in a different interpretation of the 
pathways and idea of cell cycle. 
